"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.jsLoader = exports.loadConf = void 0;
const jiti_1 = __importDefault(require("jiti"));
const sucrase_1 = require("sucrase");
let jiti = null;
function lazyJiti(option = {}, transformOpt = {}) {
    return (jiti ??
        (jiti = (0, jiti_1.default)(__filename, {
            interopDefault: true,
            ...option,
            transform: (opts) => {
                return (0, sucrase_1.transform)(opts.source, {
                    transforms: ['typescript', 'imports'],
                    ...transformOpt,
                });
            },
        })));
}
function loadConf(path, option = {}) {
    const { jiti = true, jitiOptions, transformOption } = option;
    let config = (function () {
        try {
            if (jiti) {
                return path ? lazyJiti(jitiOptions, transformOption)(path) : {};
            }
            else {
                return path ? require(path) : {};
            }
        }
        catch {
            return lazyJiti(jitiOptions, transformOption)(path);
        }
    })();
    return config.default ?? config;
}
exports.loadConf = loadConf;
function jsLoader(filepath, content, option = {}) {
    return loadConf(filepath, option);
}
exports.jsLoader = jsLoader;
